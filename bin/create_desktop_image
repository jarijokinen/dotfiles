#!/bin/bash

base_packages='
  acpi-support-base
  apt-transport-https
  ca-certificates
  console-setup
  dbus
  dirmngr
  gnupg2
  grub-pc
  initramfs-tools
  libpam-systemd
  linux-image-amd64
  locales
  net-tools
  nftables
  openssh-client
  vim-nox
'

desktop_packages='
  anacron
  autoconf
  automake
  archivemail
  bc
  bzip2 
  bison
  curl
  dbus-x11
  dnsutils
  docker-ce
  docker-compose
  ffmpeg
  g++
  gawk
  gcc
  geeqie
  gimp
  git
  google-chrome-stable
  keepassx
  inkscape
  irqbalance
  libav-tools
  libc6-dev
  libffi-dev
  libgdbm-dev
  libgl1-mesa-dri
  libgl1-mesa-glx
  libgmp-dev
  libncurses5-dev
  libreadline-dev
  libsasl2-modules
  libssl-dev
  libsqlite3-dev
  libtool
  libyaml-dev
  lightdm
  make
  mplayer
  mutt
  nasm
  nautilus-dropbox
  patch 
  pavucontrol
  pkg-config
  policykit-1
  pulseaudio
  screen
  sqlite3
  ttf-mscorefonts-installer
  unzip
  va-driver-all
  whois
  x11-xserver-utils
  xfce4-battery-plugin
  xfce4-panel
  xfce4-pulseaudio-plugin
  xfce4-screenshooter
  xfce4-session
  xfdesktop4
  xfonts-100dpi
  xfonts-scalable
  xfonts-terminus
  xfwm4
  xserver-xorg-core
  xserver-xorg-input-libinput
  xserver-xorg-input-synaptics
  xterm
  yarn
  zlib1g-dev
'

wlan_packages='
  firmware-iwlwifi
  wireless-tools
  wpasupplicant
'

exclude_packages='
  bsdmainutils
  debconf-i18n
  iptables
  nano
  tasksel
  tasksel-data
  vim-tiny
'

set -e
export LANG='C.UTF-8'
[[ $EUID -eq 0 ]] || (echo 'E: this script must be run as root' && exit 1)

while true; do
  read -p "Install desktop (y/n)? " yn
  case $yn in
    [Yy]* ) install_desktop=true; break;;
    [Nn]* ) install_desktop=false; break;;
    * ) echo "Please answer y or n.";;
  esac
done

while true; do
  read -p "Setup wlan (y/n)? " yn
  case $yn in
    [Yy]* )
      read -p 'SSID: ' ssid
      read -p 'Password: ' psk
      setup_wlan=true;
      break;;
    [Nn]* ) setup_wlan=false; break;;
    * ) echo "Please answer y or n.";;
  esac
done

while true; do
  read -p "Setup ethernet (y/n)? " yn
  case $yn in
    [Yy]* ) setup_ethernet=true; break;;
    [Nn]* ) setup_ethernet=false; break;;
    * ) echo "Please answer y or n.";;
  esac
done

read -p 'Hostname: ' hostname
read -sp 'Root password: ' root_password && echo

locale='en_US.UTF-8'
timezone='Europe/Helsinki'

suite='stretch'
version=$(date +'%Y-%m-%d-%s')
target="$HOME/$suite-$version"
mirror='http://ftp.debian.org/debian/'
components='main,contrib,non-free'
apt_components=${components//,/ }
base_packages=$(echo $base_packages | tr ' ' ,)
exclude_packages=$(echo $exclude_packages | tr ' ' ,)

echo 'Installing required packages on the host system...'
apt-get -qy install debootstrap

install_base() {
  echo 'Installing packages for the target system...'
  debootstrap --merged-usr --components=$components \
    --exclude=$exclude_packages --include=$base_packages \
    $suite $target $mirror

  echo 'Mounting devices...'
  mount --bind --make-rslave /dev $target/dev
  mount --bind --make-rslave /proc $target/proc
  mount --bind --make-rslave /sys $target/sys

  echo 'Configuring hostname...'
  echo "$hostname" > $target/etc/hostname

  echo 'Setting up apt...'
  echo 'APT::Install-Recommends "0";' > $target/etc/apt/apt.conf.d/01recommends
  cat <<EOF > $target/etc/apt/sources.list
deb $mirror $suite $apt_components
deb http://security.debian.org/debian-security/ $suite/updates $apt_components
deb $mirror $suite-updates $apt_components
deb $mirror $suite-backports $apt_components
EOF

  echo 'Configuring locales...'
  echo "$locale UTF-8" > $target/etc/locale.gen
  echo "LANG='$locale'" > $target/etc/default/locale
  chroot $target locale-gen

  echo 'Configuring console...'
  echo -e "CHARMAP='UTF-8'\nCODESET='guess'" > $target/etc/default/console-setup
  chroot $target dpkg-reconfigure -f noninteractive console-setup

  echo 'Configuring keyboard...'
  echo -e "XKBMODEL='pc105'\nXKBLAYOUT='fi'" > $target/etc/default/keyboard
  chroot $target dpkg-reconfigure -f noninteractive keyboard-configuration

  echo 'Configuring timezone...'
  chroot $target ln -fs /usr/share/zoneinfo/$timezone /etc/localtime
  chroot $target dpkg-reconfigure -f noninteractive tzdata

  echo 'Configuring grub...'
  f=$target/etc/default/grub
  sed -i 's|GRUB_TIMEOUT=5|GRUB_TIMEOUT=1|g' $f
  sed -i 's|GRUB_CMDLINE_LINUX=""|GRUB_CMDLINE_LINUX="net.ifnames=0"|g' $f

  echo 'Setting up root password...'
  echo "root:$root_password" | chroot $target chpasswd

  echo 'Setting up helper scripts...'
  cat <<'EOF' > $target/setup_disks.sh
#!/bin/bash

set -e
[[ $EUID -eq 0 ]] || (echo 'E: this script must be run as root' && exit 1)

uuid_root=$(blkid /dev/sda1 -s UUID -o value)
uuid_swap=$(blkid /dev/sda2 -s UUID -o value)

echo "UUID=$uuid_root / ext4 defaults 0 1" > /etc/fstab
echo "UUID=$uuid_swap none swap defaults 0 0" >> /etc/fstab

/usr/sbin/grub-install /dev/sda
/usr/sbin/update-grub

exit 0
EOF
  cat <<'EOF' > $target/setup_image.sh
#!/bin/sh

set -e

mount --bind --make-rslave /dev ./dev
mount --bind --make-rslave /proc ./proc 
mount --bind --make-rslave /sys ./sys

chroot . /setup_disks.sh

exit 0
EOF
  chmod 700 $target/*.sh
}

install_desktop() {
  echo 'Configuring Google Chrome repository...'
  f=$target/etc/apt/sources.list.d/google-chrome.list
  echo 'deb https://dl.google.com/linux/chrome/deb/ stable main' > $f
  wget -qO - https://dl.google.com/linux/linux_signing_key.pub \
    | chroot $target apt-key add -

  echo 'Configuring Yarn repository...'
  f=$target/etc/apt/sources.list.d/yarn.list
  echo 'deb https://dl.yarnpkg.com/debian/ stable main' > $f
  wget -qO - https://dl.yarnpkg.com/debian/pubkey.gpg \
    | chroot $target apt-key add -

  echo 'Configuring Docker repository...'
  f=$target/etc/apt/sources.list.d/docker.list
  echo 'deb [arch=amd64] https://download.docker.com/linux/debian stretch stable' > $f
  wget -qO - https://download.docker.com/linux/debian/gpg \
    | chroot $target apt-key add -


  echo 'Installing desktop packages...'
  chroot $target apt-get update
  chroot $target apt-get -qy install $desktop_packages
}

setup_wlan() {
  echo 'Installing wlan packages...'
  chroot $target apt-get -qy install $wlan_packages

  echo 'Setting up wlan...'
  echo -e "auto wlan0\niface wlan0 inet dhcp\nwpa-ssid $ssid\nwpa-psk $psk" \
    > $target/etc/network/interfaces.d/wlan0
  chmod 600 $target/etc/network/interfaces.d/wlan0
}

setup_ethernet() {
  echo 'Setting up ethernet...'
  echo -e "auto eth0\niface eth0 inet dhcp" \
    > $target/etc/network/interfaces.d/eth0
}

install_base
[[ "$install_desktop" == true ]] && install_desktop
[[ "$setup_wlan" == true ]] && setup_wlan
[[ "$setup_ethernet" == true ]] && setup_ethernet

echo 'Removing downloaded packages...'
chroot $target apt-get clean

echo 'Unmounting devices...'
umount -l $target/dev
umount -l $target/proc
umount -l $target/sys

exit 0
